function Ajax(errorReporter){  this.get = ajaxGET;  this.post = ajaxPOST;  this.errorReporter = errorReporter;}function Request(url,mycallback,errorReporter,content){  if(-1 == url.indexOf("?")){    this.url = url+"?"+new Date();  }else{    this.url = url+"&"+new Date();  }  this.mycallback = mycallback;  this.errorReporter = errorReporter;  this.content = content;}var req;var callback;var queue = new Array(0);function ajaxGET(url,mycallback){  debug.log("get "+url);  queue.push(new Request(url,mycallback,this.errorReporter,""));  ajaxDoAjax();}function ajaxPOST(url,mycallback){  var query = "";  debug.log("post "+url);  for(var i=2;i<arguments.length;i+=2){    query+=arguments[i]+"="+myescape(arguments[i+1])+"&";  }  queue.push(new Request(url,mycallback,this.errorReporter,query));  ajaxDoAjax();//  this.get(url,mycallback,query);}var request;function ajaxDoAjax(){  if(null != req){    return;  }debug.log("length"+queue.length);  request = queue.pop();  if (window.XMLHttpRequest) {// Safari/Firefox    req = new XMLHttpRequest();    req.setRequestHeader("If-Modified-Since","Thu, 01 Jun 1970 00:00:00 GMT");    req.onreadystatechange = stateChange;    if("" != request.content){      debug.log("post");      //POST      req.open("POST",request.url, true);      req.setRequestHeader("Content-Type" , "application/x-www-form-urlencoded;charset=UTF-8");      req.send(request.content);    }else{      debug.log("get");      //GET      req.open("GET", request.url, true);      req.send(null);    }  } else if (window.ActiveXObject) {// IE    req = new ActiveXObject("Microsoft.XMLHTTP");//    alert(req);//    alert(req.setRequestHeader);//    req.setRequestHeader("If-Modified-Since", "Thu, 01 Jun 1970 00:00:00 GMT");    if (req) {      req.onreadystatechange = stateChange;      if("" != request.content){  //    if("" == request.content){        //POST        req.open("POST", request.url, true);        req.setRequestHeader("Content-Type" , "application/x-www-form-urlencoded");        req.send(request.content);      }else{        req.open("GET", request.url, true);        req.send();      }    }  }}function stateChange(){ if (req.readyState == 4) {   debug.log("statu:"+req.status);   if (req.status == 200) {     request.mycallback(req.responseText);     req = null;   } else {     request.errorReporter(req.responseText);     req = null;   }   if(queue.length > 0){     ajaxDoAjax();   } }}function expand(theName){	var theLink = document.getElementsByName(theName)[0];	var theDiv = document.getElementsByName(theName)[1];	var theText = theLink.firstChild.data.substring(1);	if(theDiv.style.display == "none"){		theDiv.style.display ="block";		theLink.firstChild.data = "-"+theText;	}else{		theDiv.style.display = "none";		theLink.firstChild.data = "+"+theText;	}}/*	retrieve cookie	input:cookie name	return:retrieved cookie*/function getCookie(key){	var theCookie= "";	var cookies=document.cookie.split("; ");	for(i=0;i<cookies.length;i++){		var aCookie = cookies[i].split("=");		if(aCookie[0] == key){			if(aCookie.length == 2){				return unescape(aCookie[1]);			}else{				return "";			}		}	}	return "";}/*	set cookie,value will be trimmed when its size is over 4kb	input:cookie name,value	return:none*/function setCookie(key,val) {	var theDate = new Date();	theDate.setTime(theDate.getTime()+(365*1000*60*60*24));	document.cookie = key + "="+escape(trim4kb(val))+";expires="+theDate.toGMTString()+"; ";}function removeCookie(key){	document.cookie = key + "=;expires=Thu,01-Jan-70 00:00:01 GMT; ";}/*	store the statuses of checkboxes and radio buttons into cookie named "preferences"	input:none	return:none*/function savePreferences(){	var tags = document.getElementsByTagName("input");	var i=0;	for(i=0;i<tags.length;i++){		if(tags[i].type == "checkbox"){			setPreference(tags[i].name,tags[i].checked);		}else if(tags[i].type == "radio"){			if(tags[i].checked){				setPreference(tags[i].name,tags[i].value);			}else{				removePreference(tags[i].name);			}		}	}}/*	restore the statuses of checkboxes and radio buttons from cookie named "preferences"	input:none	return:none*/function loadPreferences(){	var tags = document.getElementsByTagName("input");	var i=0;	for(i=0;i<tags.length;i++){		if(tags[i].type == "checkbox"){			tags[i].checked = "true" == getPreference(tags[i].name);		}else if(tags[i].type == "radio"){			tags[i].checked = tags[i].value== getPreference(tags[i].name);		}	}}function removePreference(key){var prefs = getCookie("preferences");	var equal = 0;	if(-1 != (equal = prefs.indexOf(key+"="))){		var tempPrefs = "";		tempPrefs = prefs.substring(0,equal);		tempPrefs+= prefs.substring(prefs.indexOf(";",equal)+1);		prefs = tempPrefs;		setCookie("preferences",prefs);	}}function setPreference(key,value){	var prefs = getCookie("preferences");	var equal = 0;	if(-1 != (equal = prefs.indexOf(key+"="))){		var tempPrefs = "";		tempPrefs = prefs.substring(0,equal);		tempPrefs+= key+"="+value;		tempPrefs+= prefs.substring(prefs.indexOf(";",equal));		prefs = tempPrefs;	}else{		prefs+= key+"="+value+";";	}	setCookie("preferences",prefs);}function getPreference(key){	var prefs = getCookie("preferences");	var equal = 0;	if(-1 != (equal = prefs.indexOf(key+"="))){		return prefs.substring(equal+key.length+1,prefs.indexOf(";",equal));	}else{		return "";	}}function setDefaultPreference(key,value){	if("" == getPreference(key)){		setPreference(key,value);	}}function getParameter(url,key){	if(-1 != url.indexOf("?")){		var query = url.substring(url.indexOf("?")+1);		var equal = 0;		var end = 0;		if(0 == (equal = query.indexOf(key+"="))){			//the key is the first parameter		}else if(-1 != (equal = query.indexOf("&"+key+"="))){			equal++;		}else{			//parameter not found			return "";		}		var end = query.indexOf("&",equal);		if(-1 == end){			//it's the last parameter			end = query.length;		}		return query.substring(equal+key.length+1,end);	}else{	//no query string		return "";	}}function getHost(url){	url = getRoot(url);	if(0 == url.indexOf("http://")){		url = url.substring(7);	}else if(0 == url.indexOf("https://")){		url = url.substring(8);	}else{		return "undifined";	}	if(-1 != url.indexOf("@")){		url = url.substring(url.indexOf("@")+1);	}	if(-1 != url.indexOf(":")){		url = url.substring(0,url.indexOf(":")+1);	}	return url;}function getRoot(url){	if(0 == url.indexOf("http://")	|| 0 == url.indexOf("https://")){		if(-1 != url.indexOf("/",9)){		url = url.substring(0,url.indexOf("/",9));		}	}else{		return "undifined";	}	return url;}/*	trim file name*/function removeFilename(url){	var lastSlash = url.lastIndexOf("/");	if(lastSlash > 9){		return url.substring(0,lastSlash) + "/";	}else{		return url + "/";	}}var contextPath;function getContextPath(){  if(!contextPath){    var url = top.location.href;    var lastSlash = url.lastIndexOf("/");    contextPath = url.substring(0,url.lastIndexOf("/",lastSlash-1));  }  return contextPath;}function supportsXMLHttpRequest(){	return isIE() || isSafari() || isGecko() || isOpera8()|| isOpera9();}function isIE(){	return !isOpera() && -1 != navigator.userAgent.indexOf("MSIE");}function isSafari(){	return -1 != navigator.userAgent.indexOf("AppleWebKit");}function isGecko(){	return !isSafari() && -1 != navigator.userAgent.indexOf("Gecko");}function isOpera(){	return -1 != navigator.userAgent.indexOf("Opera");}function isOpera7(){	return -1 != navigator.userAgent.indexOf("Opera 7");}function isOpera8(){	return -1 != navigator.userAgent.indexOf("Opera 8");}function isOpera8(){	return -1 != navigator.userAgent.indexOf("Opera 9");}function myescape(str){  var encoded1 = encodeURI(str);  var ch;  var encoded = "";  for (var i = 0; i < encoded1.length; i++){    ch = encoded1.charAt(i);    if(ch == "&"){      encoded+="%26";    }else if(ch == "+"){      encoded+="%2B";    }else{      encoded+=ch;    }  }  return encoded;}